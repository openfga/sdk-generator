name: Run Tests

on:
  merge_group:
  pull_request:

jobs:
  test-generator:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Shellcheck
        run: make shellcheck

  build-and-test-js-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup git
        run: ./scripts/setup_git.sh
        env:
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}

      - name: Clone the existing SDK
        run: ./scripts/clone_sdk.sh
        env:
          GITHUB_ORG_ID: ${{ secrets.JS_SDK_GITHUB_ORG_ID }}
          GITHUB_REPO_ID: ${{ secrets.JS_SDK_GITHUB_REPO_ID }}
          SSH_KEY: ${{ secrets.JS_SDK_SSH_KEY }}
          SDK_PATH: clients/fga-js-sdk
          KNOWN_HOSTS: ${{secrets.KNOWN_HOSTS}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Run SDK Tests
        run: make test-client-js

      - name: Check for SDK changes
        run: ./scripts/commit_push_changes.sh
        env:
          SDK_PATH: clients/fga-js-sdk
          DRY_RUN: 1
          TAGGING_DISABLE: 1
          GITHUB_ORG_ID: ${{ secrets.JS_SDK_GITHUB_ORG_ID }}
          GITHUB_REPO_ID: ${{ secrets.JS_SDK_GITHUB_REPO_ID }}
          SSH_KEY: ${{ secrets.JS_SDK_SSH_KEY }}

  build-and-test-go-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup git
        run: ./scripts/setup_git.sh
        env:
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}

      - name: Clone the existing SDK
        run: ./scripts/clone_sdk.sh
        env:
          GITHUB_ORG_ID: ${{ secrets.GO_SDK_GITHUB_ORG_ID }}
          GITHUB_REPO_ID: ${{ secrets.GO_SDK_GITHUB_REPO_ID }}
          SSH_KEY: ${{ secrets.GO_SDK_SSH_KEY }}
          SDK_PATH: clients/fga-go-sdk
          GIT_SSH_COMMAND: "ssh -o UserKnownHostsFile=$tmpdir/known_hosts"
          KNOWN_HOSTS: ${{secrets.KNOWN_HOSTS}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Run SDK Tests
        run: make test-client-go

      - name: Check for SDK changes
        run: ./scripts/commit_push_changes.sh
        env:
          SDK_PATH: clients/fga-go-sdk
          DRY_RUN: 1
          TAGGING_DISABLE: 1
          GITHUB_ORG_ID: ${{ secrets.GO_SDK_GITHUB_ORG_ID }}
          GITHUB_REPO_ID: ${{ secrets.GO_SDK_GITHUB_REPO_ID }}
          SSH_KEY: ${{ secrets.GO_SDK_SSH_KEY }}

  build-and-test-dotnet-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup git
        run: ./scripts/setup_git.sh
        env:
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}

      - name: Clone the existing SDK
        run: ./scripts/clone_sdk.sh
        env:
          GITHUB_ORG_ID: ${{ secrets.DOTNET_SDK_GITHUB_ORG_ID }}
          GITHUB_REPO_ID: ${{ secrets.DOTNET_SDK_GITHUB_REPO_ID }}
          SSH_KEY: ${{ secrets.DOTNET_SDK_SSH_KEY }}
          SDK_PATH: clients/fga-dotnet-sdk
          KNOWN_HOSTS: ${{secrets.KNOWN_HOSTS}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Run All Tests
        run: make test-client-dotnet

      - name: Check for SDK changes
        run: ./scripts/commit_push_changes.sh
        env:
          SDK_PATH: clients/fga-dotnet-sdk
          DRY_RUN: 1
          TAGGING_DISABLE: 1
          GITHUB_ORG_ID: ${{ secrets.DOTNET_SDK_GITHUB_ORG_ID }}
          GITHUB_REPO_ID: ${{ secrets.DOTNET_SDK_GITHUB_REPO_ID }}
          SSH_KEY: ${{ secrets.DOTNET_SDK_SSH_KEY }}

  build-and-test-python-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Specify python version
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Setup git
        run: ./scripts/setup_git.sh
        env:
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}

      - name: Clone the existing SDK
        run: ./scripts/clone_sdk.sh
        env:
          GITHUB_ORG_ID: ${{ secrets.PYTHON_SDK_GITHUB_ORG_ID }}
          GITHUB_REPO_ID: ${{ secrets.PYTHON_SDK_GITHUB_REPO_ID }}
          SSH_KEY: ${{ secrets.PYTHON_SDK_SSH_KEY }}
          SDK_PATH: clients/fga-python-sdk
          KNOWN_HOSTS: ${{secrets.KNOWN_HOSTS}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Run All Tests
        run: |-
          make test-client-python

      - name: Check for SDK changes
        run: ./scripts/commit_push_changes.sh
        env:
          SDK_PATH: clients/fga-python-sdk
          DRY_RUN: 1
          TAGGING_DISABLE: 1
          GITHUB_ORG_ID: ${{ secrets.PYTHON_SDK_GITHUB_ORG_ID }}
          GITHUB_REPO_ID: ${{ secrets.PYTHON_SDK_GITHUB_REPO_ID }}
          SSH_KEY: ${{ secrets.PYTHON_SDK_SSH_KEY }}

  build-and-test-java-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup git
        run: ./scripts/setup_git.sh
        env:
          GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
          GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}

      # - name: Clone the existing SDK
      #   run: ./scripts/clone_sdk.sh
      #   env:
      #     GITHUB_ORG_ID: ${{ secrets.JAVA_SDK_GITHUB_ORG_ID }}
      #     GITHUB_REPO_ID: ${{ secrets.JAVA_SDK_GITHUB_REPO_ID }}
      #     SSH_KEY: ${{ secrets.JAVA_SDK_SSH_KEY }}
      #     SDK_PATH: clients/fga-java-sdk
      #     KNOWN_HOSTS: ${{secrets.KNOWN_HOSTS}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      # TODO: Don't run this twice. For some reason, the initial run of
      # `make build-client-java` doesn't work, but subsequent runs do.
      - name: Build Java SDK
        continue-on-error: true
        run: |-
          mkdir -p clients/fga-java-sdk
          make build-client-java

      - name: Run All Tests
        run: |-
          make test-integration-client-java

      # - name: Check for SDK changes
      #   run: ./scripts/commit_push_changes.sh
      #   env:
      #     SDK_PATH: clients/fga-java-sdk
      #     DRY_RUN: 1
      #     TAGGING_DISABLE: 1
      #     GITHUB_ORG_ID: ${{ secrets.JAVA_SDK_GITHUB_ORG_ID }}
      #     GITHUB_REPO_ID: ${{ secrets.JAVA_SDK_GITHUB_REPO_ID }}
      #     SSH_KEY: ${{ secrets.JAVA_SDK_SSH_KEY }}
