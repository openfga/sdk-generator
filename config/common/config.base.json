{
  "appName": "OpenFGA",
  "applicationDescription": "OpenFGA is an open source software, released and currently maintained by Auth0 and based on Auth0 FGA. OpenFGA aims to provide the framework to solve fine-grained authorization at scale. It is built around the concepts outlined in Google's Zanzibar paper in 2019",
  "appShortName": "OpenFga",
  "appCamelCaseName": "openFga",
  "appUpperCaseName": "OPENFGA",
  "appTitleCaseName": "OpenFGA",
  "appLongName": "OpenFGA",
  "packageDescription": "OpenFGA SDK",
  "packageDetailedDescription": "This is an autogenerated SDK for OpenFGA. It provides a wrapper around the [OpenFGA API definition](https://openfga.dev/api).",
  "operationIdPrefix": "OpenFGAService",
  "author": "OpenFGA",
  "gitHost": "github.com",
  "gitUserId": "openfga",
  "userAgent": "openfga-sdk $sdk_language/$package_version",
  "supportInfo": "https://openfga.dev/community",
  "docsUrl": "https://openfga.dev/docs",
  "apiDocsUrl": "https://openfga.dev/api/service",
  "websiteUrl": "https://openfga.dev",
  "copyrightNotice": "Copyright (c) 2022 the OpenFGA contributors <contact@openfga.dev> (https://openfga.dev)",
  "redditUrl": null,
  "licenseId": "Apache-2.0",
  "licenseBadgeId": "Apache_2.0",
  "twitterUserName": "openfga",
  "templateDir": "/config/template",
  "sampleApiDomain": "fga.example",
  "packageTags": [
    "openfga",
    "authorization",
    "fga",
    "fine-grained-authorization",
    "rebac",
    "zanzibar"
  ],
  "files": {
    "gitignore.mustache": {
      "destinationFilename": ".gitignore",
      "templateType": "SupportingFiles"
    },
    "LICENSE.mustache": {
      "destinationFilename": "LICENSE",
      "templateType": "SupportingFiles"
    },
    "CONTRIBUTING.md.mustache": {
      "destinationFilename": "CONTRIBUTING.md",
      "templateType": "SupportingFiles"
    },
    "VERSION.mustache": {
      "destinationFilename": "VERSION.txt",
      "templateType": "SupportingFiles"
    },
    ".github/CODEOWNERS.mustache": {
      "destinationFilename": ".github/CODEOWNERS",
      "templateType": "SupportingFiles"
    },
    ".github/ISSUE_TEMPLATE/config.yaml": {
      "destinationFilename": ".github/ISSUE_TEMPLATE/config.yaml"
    },
    ".github/ISSUE_TEMPLATE/bug_report.yaml.mustache": {
      "destinationFilename": ".github/ISSUE_TEMPLATE/bug_report.yaml",
      "templateType": "SupportingFiles"
    },
    ".github/ISSUE_TEMPLATE/feature_request.yaml.mustache": {
      "destinationFilename": ".github/ISSUE_TEMPLATE/feature_request.yaml",
      "templateType": "SupportingFiles"
    },
    ".codecov.yml.mustache": {
      "destinationFilename": ".codecov.yml",
      "templateType": "SupportingFiles"
    }
  },
  "retryMaxAllowedNumber": 15,
  "defaultMaxRetry": 3,
  "defaultMinWaitInMs": 100,
  "maxBackoffTimeInSec": 120,
  "retryHeaderMaxAllowableDurationInSec": 1800,
  "clientMaxMethodParallelRequests": 10,
  "clientMaxBatchSize": 50,
  "defaultConnectionTimeoutInMs": 10000,
  "tokenExpiryThresholdBufferInSec": 300,
  "tokenExpiryJitterInSec": 300,
  "clientMethodHeader": "X-OpenFGA-Client-Method",
  "clientBulkRequestIdHeader": "X-OpenFGA-Client-Bulk-Request-Id",
  "retryAfterHeaderName": "Retry-After",
  "rateLimitResetHeaderName": "X-RateLimit-Reset",
  "rateLimitResetAltHeaderName": "X-Rate-Limit-Reset",
  "openFGADockerTag": "v1.10.2"
}
