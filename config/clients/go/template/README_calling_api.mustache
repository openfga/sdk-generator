#### List Stores

[API Documentation]({{apiDocsUrl}}/docs/api#/Stores/ListStores)

```golang
configuration, err := {{packageName}}.NewConfiguration({{packageName}}.Configuration{
    ApiHost: "api.{{sampleApiDomain}}"
})

if err != nil {
// .. Handle error
}

apiClient := {{packageName}}.NewAPIClient(configuration)
stores, response, err := apiClient.{{appShortName}}Api.ListStores(context.Background()).Execute();

// stores = [{ "id": "01FQH7V8BEG3GPQW93KTRFR8JB", "name": "FGA Demo Store", "created_at": "2022-01-01T00:00:00.000Z", "updated_at": "2022-01-01T00:00:00.000Z" }]
```

#### Create Store

[API Documentation]({{apiDocsUrl}}/docs/api#/Stores/CreateStore)

```golang
configuration, err := {{packageName}}.NewConfiguration({{packageName}}.Configuration{
    ApiHost: "api.{{sampleApiDomain}}"
})

if err != nil {
// .. Handle error
}

apiClient := {{packageName}}.NewAPIClient(configuration)

store, _, err := apiClient.{{appShortName}}Api.CreateStore(context.Background()).Body({{packageName}}.CreateStoreRequest{Name: "FGA Demo"}).Execute()
if err != nil {
    // handle error
}

// store.Id = "01FQH7V8BEG3GPQW93KTRFR8JB"

// store store.Id in database
// update the storeId of the current instance
apiClient.SetStoreId(*store.Id)
// continue calling the API normally
```

#### Get Store

[API Documentation]({{apiDocsUrl}}/docs/api#/Stores/GetStore)

> Requires a client initialized with a storeId

```golang
store, _, err := apiClient.{{appShortName}}Api.GetStore(context.Background()).Execute()
if err != nil {
    // handle error
}

// store = { "id": "01FQH7V8BEG3GPQW93KTRFR8JB", "name": "FGA Demo Store", "created_at": "2022-01-01T00:00:00.000Z", "updated_at": "2022-01-01T00:00:00.000Z" }
```

#### Delete Store

[API Documentation]({{apiDocsUrl}}/docs/api#/Stores/DeleteStore)

> Requires a client initialized with a storeId

```golang
_, err := apiClient.{{appShortName}}Api.DeleteStore(context.Background()).Execute()
if err != nil {
    // handle error
}
```

#### Write Authorization Model

[API Documentation]({{apiDocsUrl}}#/Authorization%20Models/WriteAuthorizationModel)

> Note: To learn how to build your authorization model, check the Docs at {{docsUrl}}.

> Learn more about [the {{appName}} configuration language]({{docsUrl}}/configuration-language).

```golang
body  := {{packageName}}.WriteAuthorizationModelRequest{TypeDefinitions: []{{packageName}}.TypeDefinition{
	{
		Type: "user",
	},
	{
		Type: "document",
		Relations: &map[string]{{packageName}}.Userset{
			"writer": {This: &map[string]interface{}{}},
			"viewer": {Union: &{{packageName}}.Usersets{
				Child: &[]{{packageName}}.Userset{
					{This: &map[string]interface{}{}},
					{ComputedUserset: &{{packageName}}.ObjectRelation{
						Object:   {{packageName}}.PtrString(""),
						Relation: {{packageName}}.PtrString("writer"),
					}},
				},
			}},
		},
	},
}}
data, response, err := apiClient.{{appShortName}}Api.WriteAuthorizationModel(context.Background()).Body(body).Execute()

fmt.Printf("%s", data.AuthorizationModelId) // 1uHxCSuTP0VKPYSnkq1pbb1jeZw
```

#### Read a Single Authorization Model

[API Documentation]({{apiDocsUrl}}#/Authorization%20Models/ReadAuthorizationModel)

```golang
// Assuming `1uHxCSuTP0VKPYSnkq1pbb1jeZw` is an id of a single model
data, response, err := apiClient.{{appShortName}}Api.ReadAuthorizationModel(context.Background(), "1uHxCSuTP0VKPYSnkq1pbb1jeZw").Execute()

// data = {"authorization_model":{"id":"1uHxCSuTP0VKPYSnkq1pbb1jeZw","type_definitions":[{"type":"document","relations":{"writer":{"this":{}},"viewer":{ ... }}},{"type":"user"}]}} // JSON

fmt.Printf("%s", data.AuthorizationModel.Id) // 1uHxCSuTP0VKPYSnkq1pbb1jeZw
```

#### Read Authorization Model IDs

[API Documentation]({{apiDocsUrl}}#/Authorization%20Models/ReadAuthorizationModels)

```golang
data, response, err := apiClient.{{appShortName}}Api.ReadAuthorizationModels(context.Background()).Execute()

// data = {"authorization_model_ids":["1uHxCSuTP0VKPYSnkq1pbb1jeZw","GtQpMohWezFmIbyXxVEocOCxxgq"]} // in JSON

fmt.Printf("%s", (*data.AuthorizationModelIds)[0]) // 1uHxCSuTP0VKPYSnkq1pbb1jeZw
```

#### Check

[API Documentation]({{apiDocsUrl}}#/Relationship%20Queries/Check)

> Provide a tuple and ask the {{appName}} API to check for a relationship

```golang
body := {{packageName}}.CheckRequest{
	TupleKey: {{packageName}}.TupleKey{
		User: {{packageName}}.PtrString("user:81684243-9356-4421-8fbf-a4f8d36aa31b"),
		Relation: {{packageName}}.PtrString("viewer"),
		Object: {{packageName}}.PtrString("document:roadmap"),
	},
}
data, response, err := apiClient.{{appShortName}}Api.Check(context.Background()).Body(body).Execute()

// data = {"allowed":true,"resolution":""} // in JSON

fmt.Printf("%t", *data.Allowed) // True

```

#### Write Tuples

[API Documentation]({{apiDocsUrl}}#/Relationship%20Tuples/Write)

```golang
body := {{packageName}}.WriteRequest{
	Writes: &{{packageName}}.TupleKeys{
		TupleKeys: []{{packageName}}.TupleKey{
			{
				User: {{packageName}}.PtrString("user:81684243-9356-4421-8fbf-a4f8d36aa31b"),
				Relation: {{packageName}}.PtrString("viewer"),
				Object: {{packageName}}.PtrString("document:roadmap"),
			},
		},
	},
}
_, response, err := apiClient.{{appShortName}}Api.Write(context.Background()).Body(body).Execute()

```

#### Delete Tuples

[API Documentation]({{apiDocsUrl}}#/Relationship%20Tuples/Write)

```golang
body := {{packageName}}.WriteRequest{
	Deletes: &{{packageName}}.TupleKeys{
		TupleKeys: []{{packageName}}.TupleKey{
			{
				User: {{packageName}}.PtrString("user:81684243-9356-4421-8fbf-a4f8d36aa31b"),
				Relation: {{packageName}}.PtrString("viewer"),
				Object: {{packageName}}.PtrString("document:roadmap"),
			},
		},
	},
}
_, response, err := apiClient.{{appShortName}}Api.Write(context.Background()).Body(body).Execute()

```

#### Expand

[API Documentation]({{apiDocsUrl}}#/Relationship%20Queries/Expand)

```golang
body := {{packageName}}.ExpandRequest{
	TupleKey: {{packageName}}.TupleKey{
		Relation: {{packageName}}.PtrString("viewer"),
		Object: {{packageName}}.PtrString("document:roadmap"),
	},
}
data, response, err := apiClient.{{appShortName}}Api.Expand(context.Background()).Body(body).Execute()

// data = {"tree":{"root":{"name":"document:roadmap#viewer","leaf":{"users":{"users":["user:81684243-9356-4421-8fbf-a4f8d36aa31b","user:f52a4f7a-054d-47ff-bb6e-3ac81269988f"]}}}}} // JSON
```

#### Read Changes

[API Documentation]({{apiDocsUrl}}#/Relationship%20Tuples/Read)

```golang
// Find if a relationship tuple stating that a certain user is a viewer of a certain document
body := {{packageName}}.ReadRequest{
    TupleKey: {{packageName}}.TupleKey{
        User:     {{packageName}}.PtrString("user:81684243-9356-4421-8fbf-a4f8d36aa31b"),
        Relation: {{packageName}}.PtrString("viewer"),
        Object:   {{packageName}}.PtrString("document:roadmap"),
    },
}

// Find all relationship tuples where a certain user has a relationship as any relation to a certain document
body := {{packageName}}.ReadRequest{
    TupleKey: {{packageName}}.TupleKey{
        User:     {{packageName}}.PtrString("user:81684243-9356-4421-8fbf-a4f8d36aa31b"),
        Object:   {{packageName}}.PtrString("document:roadmap"),
    },
}

// Find all relationship tuples where a certain user is a viewer of any document
body := {{packageName}}.ReadRequest{
    TupleKey: {{packageName}}.TupleKey{
        User:     {{packageName}}.PtrString("user:81684243-9356-4421-8fbf-a4f8d36aa31b"),
        Relation: {{packageName}}.PtrString("viewer"),
        Object:   {{packageName}}.PtrString("document:"),
    },
}

// Find all relationship tuples where any user has a relationship as any relation with a particular document
body := {{packageName}}.ReadRequest{
    TupleKey: {{packageName}}.TupleKey{
        Object:   {{packageName}}.PtrString("document:roadmap"),
    },
}

data, response, err := apiClient.{{appShortName}}Api.Read(context.Background()).Body(body).Execute()

// In all the above situations, the response will be of the form:
// data = {"tuples":[{"key":{"user":"...","relation":"...","object":"..."},"timestamp":"..."}]} // JSON
```

#### Read Changes (Watch)

[API Documentation]({{apiDocsUrl}}#/Relationship%20Tuples/ReadChanges)

```golang
data, response, err := apiClient.{{appShortName}}Api.ReadChanges(context.Background()).
    Type_("document").
    PageSize(25).
    ContinuationToken("eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==").
    Execute()

// response.continuation_token = ...
// response.changes = [
//   { tuple_key: { user, relation, object }, operation: "writer", timestamp: ... },
//   { tuple_key: { user, relation, object }, operation: "viewer", timestamp: ... }
// ]
```

#### List Objects

> Requires a client initialized with a storeId

[API Documentation]({{apiDocsUrl}}#/Relationship%20Queries/ListObjects)

```golang
body := {{packageName}}.ListObjectsRequest{
    User:                 "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
    Relation:             "viewer",
    Type:                 "document",
	ContextualTuples: &ContextualTupleKeys{
{{=<% %>=}}
        TupleKeys: []TupleKey{{
            User:     PtrString("user:81684243-9356-4421-8fbf-a4f8d36aa31b"),
            Relation: PtrString("writer"),
            Object:   PtrString("document:budget"),
        }},
<%={{ }}=%>
    },
}

data, response, err := apiClient.{{appShortName}}Api.ListObjects(context.Background()).Body(body).Execute()

// response.object_ids = ["roadmap"]
```
