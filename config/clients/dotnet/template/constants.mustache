{{>partial_header}}

namespace OpenFga.Sdk.Constants;

public static class FgaConstants {
    // SdkVersion is the version of this service
    public const string SdkVersion = "{{packageVersion}}";

    // UserAgent is the user agent used in HTTP requests
    public const string UserAgent = "{{userAgent}}";

    // SampleBaseDomain is the sample API Domain
    public const string SampleBaseDomain = "{{sampleApiDomain}}";

    // RetryMaxAllowedNumber is the maximum allowed number of retries for HTTP requests
    public const int RetryMaxAllowedNumber = {{retryMaxAllowedNumber}};

    // DefaultMaxRetry is the default maximum number of retries for HTTP requests
    public const int DefaultMaxRetry = {{defaultMaxRetry}};

    // DefaultMinWaitInMs is the default minimum wait time between retries in milliseconds
    public const int DefaultMinWaitInMs = {{defaultMinWaitInMs}};

    // MaxBackoffTimeInSec is the maximum backoff time in seconds
    public const int MaxBackoffTimeInSec = {{maxBackoffTimeInSec}};

    // RetryHeaderMaxAllowableDurationInSec is the maximum allowable duration for retry headers in seconds
    public const int RetryHeaderMaxAllowableDurationInSec = {{retryHeaderMaxAllowableDurationInSec}};

    // ClientMaxMethodParallelRequests is the maximum number of parallel requests for a single method
    public const int ClientMaxMethodParallelRequests = {{clientMaxMethodParallelRequests}};

    // ClientMaxBatchSize is the maximum batch size for batch requests
    public const int ClientMaxBatchSize = {{clientMaxBatchSize}};

    // DefaultConnectionTimeoutInMs is the default connection timeout in milliseconds
    public const int DefaultConnectionTimeoutInMs = {{defaultConnectionTimeoutInMs}};

    // TokenExpiryThresholdBufferInSec is the buffer time in seconds before token expiry to consider it expired
    public const int TokenExpiryThresholdBufferInSec = {{tokenExpiryThresholdBufferInSec}};

    // TokenExpiryJitterInSec is the jitter time in seconds to add randomness to token expiry checks
    public const int TokenExpiryJitterInSec = {{tokenExpiryJitterInSec}};

    // ClientMethodHeader is the header used to identify the client method
    public const string ClientMethodHeader = "{{clientMethodHeader}}";

    // ClientBulkRequestIdHeader is the header used to identify bulk request IDs
    public const string ClientBulkRequestIdHeader = "{{clientBulkRequestIdHeader}}";

    // RetryAfterHeaderName is the standard HTTP header for retry after
    public const string RetryAfterHeaderName = "{{retryAfterHeaderName}}";

    // RateLimitResetHeaderName is a common header for rate limit reset time
    public const string RateLimitResetHeaderName = "{{rateLimitResetHeaderName}}";

    // RateLimitResetAltHeaderName is an alternative header for rate limit reset time
    public const string RateLimitResetAltHeaderName = "{{rateLimitResetAltHeaderName}}";

    // HashCodeBasePrimeNumber is a prime number used as a base in hash code calculations
    public const int HashCodeBasePrimeNumber = {{hashCodeBasePrimeNumber}};

    // HashCodeMultiplierPrimeNumber is a prime number used as a multiplier in hash code calculations
    public const int HashCodeMultiplierPrimeNumber = {{hashCodeMultiplierPrimeNumber}};
}
