#### List Stores

[API Documentation]({{apiDocsUrl}}/docs/api#/Stores/ListStores)

```csharp
var configuration = new Configuration() {
    ApiScheme = Environment.GetEnvironmentVariable("{{appUpperCaseName}}_API_SCHEME"),
    ApiHost = Environment.GetEnvironmentVariable("{{appUpperCaseName}}_API_HOST"),
};
var {{appCamelCaseName}}Api = new {{appShortName}}Api(configuration);
var response = await {{appCamelCaseName}}Api.ListStores();

// stores = [{ "id": "01FQH7V8BEG3GPQW93KTRFR8JB", "name": "FGA Demo Store", "created_at": "2022-01-01T00:00:00.000Z", "updated_at": "2022-01-01T00:00:00.000Z" }]
```

#### Create Store

[API Documentation]({{apiDocsUrl}}/docs/api#/Stores/CreateStore)

```csharp
var configuration = new Configuration() {
    ApiScheme = Environment.GetEnvironmentVariable("{{appUpperCaseName}}_API_SCHEME"),
    ApiHost = Environment.GetEnvironmentVariable("{{appUpperCaseName}}_API_HOST"),
};
var {{appCamelCaseName}}Api = new {{appShortName}}Api(configuration);
var store = await {{appCamelCaseName}}Api.CreateStore(new CreateStoreRequest(){Name = "FGA Demo"})

// store.Id = "01FQH7V8BEG3GPQW93KTRFR8JB"

// store store.Id in database

// update the storeId of the current instance
{{appCamelCaseName}}Api.StoreId = storeId;

// continue calling the API normally
```

#### Get Store

[API Documentation]({{apiDocsUrl}}/docs/api#/Stores/GetStore)

> Requires a client initialized with a storeId

```csharp
var configuration = new Configuration() {
    ApiScheme = Environment.GetEnvironmentVariable("{{appUpperCaseName}}_API_SCHEME"),
    ApiHost = Environment.GetEnvironmentVariable("{{appUpperCaseName}}_API_HOST"),
    StoreId = Environment.GetEnvironmentVariable("{{appUpperCaseName}}_STORE_ID"),
};
var {{appCamelCaseName}}Api = new {{appShortName}}Api(configuration);
var store = await {{appCamelCaseName}}Api.GetStore();

// store = { "id": "01FQH7V8BEG3GPQW93KTRFR8JB", "name": "FGA Demo Store", "created_at": "2022-01-01T00:00:00.000Z", "updated_at": "2022-01-01T00:00:00.000Z" }
```

#### Delete Store

[API Documentation]({{apiDocsUrl}}/docs/api#/Stores/DeleteStore)

> Requires a client initialized with a storeId

```csharp
var store = await {{appCamelCaseName}}Api.DeleteStore();
```

#### Write Authorization Model

[API Documentation]({{apiDocsUrl}}#/Authorization%20Models/WriteAuthorizationModel)

> Note: To learn how to build your authorization model, check the Docs at {{docsUrl}}.

> Learn more about [the {{appName}} configuration language]({{docsUrl}}/configuration-language).

```csharp
var relations = new Dictionary<string, Userset>()
{
    {"writer", new Userset(_this: new object())},
    {
        "reader",
        new Userset(union: new Usersets(new List<Userset>()
            {new(new object(), new ObjectRelation("", "writer"))}))
    }
};
var body = new WriteAuthorizationModelRequest(new List<TypeDefinition>() {new("repo", relations)});
var response = await {{appCamelCaseName}}Api.WriteAuthorizationModel(body);

// response.AuthorizationModelId = 1uHxCSuTP0VKPYSnkq1pbb1jeZw
```

#### Read a Single Authorization Model

[API Documentation]({{apiDocsUrl}}#/Authorization%20Models/ReadAuthorizationModel)

```csharp
string authorizationModelId = "1uHxCSuTP0VKPYSnkq1pbb1jeZw"; // Assuming `1uHxCSuTP0VKPYSnkq1pbb1jeZw` is an id of an existing model
var response = await {{appCamelCaseName}}Api.ReadAuthorizationModel(authorizationModelId);

// response.AuthorizationModel.Id = "1uHxCSuTP0VKPYSnkq1pbb1jeZw"
// response.AuthorizationModel.TypeDefinitions = [{ "type": "repo", "relations": { ... } }]
```

#### Read Authorization Model IDs

[API Documentation]({{apiDocsUrl}}#/Authorization%20Models/ReadAuthorizationModels)

```csharp
var response = await {{appCamelCaseName}}Api.ReadAuthorizationModels();

// response.AuthorizationModelIds = ["1uHxCSuTP0VKPYSnkq1pbb1jeZw", "GtQpMohWezFmIbyXxVEocOCxxgq"];
```

#### Check

[API Documentation]({{apiDocsUrl}}#/Relationship%20Queries/Check)

```csharp
var body =
    new CheckRequest(tupleKey: new TupleKey("document:project-roadmap", "editor", "anne"));
var response = await {{appCamelCaseName}}Api.Check(body);
// response.Allowed = true
```

#### Write Tuples

[API Documentation]({{apiDocsUrl}}#/Relationship%20Tuples/Write)

```csharp
var body = new WriteRequest(new TupleKeys(new List<TupleKey>
    {new("document:project-roadmap", "editor", "anne")}));
var response = await {{appCamelCaseName}}Api.Write(body);
```

#### Delete Tuples

[API Documentation]({{apiDocsUrl}}#/Relationship%20Tuples/Write)

```csharp
var body = new WriteRequest(new TupleKeys(new List<TupleKey> { }),
    new TupleKeys(new List<TupleKey> {new("document:project-roadmap", "editor", "anne")}));
var response = await {{appCamelCaseName}}Api.Write(body);
```

#### Expand

[API Documentation]({{apiDocsUrl}}#/Relationship%20Queries/Expand)

```csharp
var body = new ExpandRequest(new TupleKey("document:project-roadmap", "editor"));
var response = await {{appCamelCaseName}}Api.Expand(body);

// response.Tree.Root = {"name":"workspace:675bcac4-ad38-4fb1-a19a-94a5648c91d6#admin","leaf":{"users":{"users":["anne","beth"]}}}
```

#### Read Changes

[API Documentation]({{apiDocsUrl}}#/Relationship%20Tuples/Read)

```csharp
// Find if a relationship tuple stating that a certain user is an admin on a certain workspace
var body = new ReadRequest(new TupleKey(
    _object: "workspace:675bcac4-ad38-4fb1-a19a-94a5648c91d6",
    relation: "admin",
    user: "81684243-9356-4421-8fbf-a4f8d36aa31b"));

// Find all relationship tuples where a certain user has a relationship as any relation to a certain workspace
var body = new ReadRequest(new TupleKey(
    _object: "workspace:675bcac4-ad38-4fb1-a19a-94a5648c91d6",
    user: "81684243-9356-4421-8fbf-a4f8d36aa31b"));

// Find all relationship tuples where a certain user is an admin on any workspace
var body = new ReadRequest(new TupleKey(
    _object: "workspace:",
    relation: "admin",
    user: "81684243-9356-4421-8fbf-a4f8d36aa31b"));

// Find all relationship tuples where any user has a relationship as any relation with a particular workspace
var body = new ReadRequest(new TupleKey(
    _object: "workspace:675bcac4-ad38-4fb1-a19a-94a5648c91d6"));

var body = new ReadRequest(new TupleKey("document:project-roadmap", "editor", "anne"));
var response = await {{appCamelCaseName}}Api.Read(body);

// In all the above situations, the response will be of the form:
// response = {"tuples":[{"key":{"user":"...","relation":"...","object":"..."},"timestamp":"..."}]}
```

#### Read Changes (Watch)

[API Documentation]({{apiDocsUrl}}#/Relationship%20Tuples/ReadChanges)

```csharp
var type = 'workspace';
var pageSize = 25;
var continuationToken = 'eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==';

var response = await {{appCamelCaseName}}Api.ReadChanges(type, pageSize, continuationToken);

// response.continuation_token = ...
// response.changes = [
//   { tuple_key: { user, relation, object }, operation: "write", timestamp: ... },
//   { tuple_key: { user, relation, object }, operation: "delete", timestamp: ... }
// ]
```

#### List Objects

[API Documentation]({{apiDocsUrl}}#/Relationship%20Queries/ListObjects)

```csharp
var body = new ListObjectsRequest{
    AuthorizationModelId = "01GAHCE4YVKPQEKZQHT2R89MQV",
    User = "anne",
    Relation = "can_read",
    Type = "document",
    ContextualTuples = new ContextualTupleKeys() {
        TupleKeys = new List<TupleKey> {
            new("folder:product", "editor", "anne"),
            new("document:roadmap", "parent", "folder:product")
        }
    }
};
var response = await {{appCamelCaseName}}Api.ListObjects(body);

// response.ObjectIds = ["roadmap"]
```
