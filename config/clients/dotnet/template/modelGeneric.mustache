    /// <summary>
    /// {{description}}{{^description}}{{classname}}{{/description}}
    /// </summary>
    [DataContract(Name = "{{{name}}}")]
    {{#discriminator}}
    [JsonConverter(typeof(JsonSubtypes), "{{{discriminatorName}}}")]
    {{#mappedModels}}
    [JsonSubtypes.KnownSubType(typeof({{{modelName}}}), "{{^vendorExtensions.x-discriminator-value}}{{{mappingName}}}{{/vendorExtensions.x-discriminator-value}}{{#vendorExtensions.x-discriminator-value}}{{{.}}}{{/vendorExtensions.x-discriminator-value}}")]
    {{/mappedModels}}
    {{/discriminator}}
    {{>visibility}} partial class {{classname}} : {{#parent}}{{{.}}}, {{/parent}}IEquatable<{{classname}}>{{#validatable}}, IValidatableObject{{/validatable}}
    {
        {{#vars}}
        {{#items.isEnum}}
        {{#items}}
        {{^complexType}}
{{>modelInnerEnum}}
        {{/complexType}}
        {{/items}}
        {{/items.isEnum}}
        {{#isEnum}}
        {{^complexType}}
{{>modelInnerEnum}}
        {{/complexType}}
        {{/isEnum}}
        {{#isEnum}}

        /// <summary>
        /// {{description}}{{^description}}Gets or Sets {{{name}}}{{/description}}
        /// </summary>
        {{#description}}
        /// <value>{{.}}</value>
        {{/description}}
        {{^conditionalSerialization}}
        [DataMember(Name = "{{baseName}}"{{#required}}, IsRequired = true{{/required}}, EmitDefaultValue = {{#vendorExtensions.x-emit-default-value}}true{{/vendorExtensions.x-emit-default-value}}{{^vendorExtensions.x-emit-default-value}}{{#isBoolean}}true{{/isBoolean}}{{^isBoolean}}{{#isNullable}}true{{/isNullable}}{{^isNullable}}false{{/isNullable}}{{/isBoolean}}{{/vendorExtensions.x-emit-default-value}})]
        [JsonPropertyName("{{baseName}}")]
        {{#deprecated}}
        [Obsolete]
        {{/deprecated}}
        public {{{complexType}}}{{^complexType}}{{{datatypeWithEnum}}}{{/complexType}}{{^isContainer}}{{^required}}?{{/required}}{{/isContainer}} {{name}} { get; set; }
        {{#isReadOnly}}

        /// <summary>
        /// Returns false as {{name}} should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerialize{{name}}()
        {
            return false;
        }
        {{/isReadOnly}}
        {{/conditionalSerialization}}
        {{#conditionalSerialization}}
        {{#isReadOnly}}
        [DataMember(Name = "{{baseName}}"{{#required}}, IsRequired = true{{/required}}, EmitDefaultValue = {{#vendorExtensions.x-emit-default-value}}true{{/vendorExtensions.x-emit-default-value}}{{^vendorExtensions.x-emit-default-value}}{{#isBoolean}}true{{/isBoolean}}{{^isBoolean}}{{#isNullable}}true{{/isNullable}}{{^isNullable}}false{{/isNullable}}{{/isBoolean}}{{/vendorExtensions.x-emit-default-value}})]
        [JsonPropertyName("{{baseName}}")]
        {{#deprecated}}
        [Obsolete]
        {{/deprecated}}
        public {{{complexType}}}{{^complexType}}{{{datatypeWithEnum}}}{{/complexType}}{{^isContainer}}{{^required}}?{{/required}}{{/isContainer}} {{name}} { get; set; }


        /// <summary>
        /// Returns false as {{name}} should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerialize{{name}}()
        {
            return false;
        }
        {{/isReadOnly}}

        {{^isReadOnly}}
        [DataMember(Name = "{{baseName}}"{{#required}}, IsRequired = true{{/required}}, EmitDefaultValue = {{#vendorExtensions.x-emit-default-value}}true{{/vendorExtensions.x-emit-default-value}}{{^vendorExtensions.x-emit-default-value}}{{#isBoolean}}true{{/isBoolean}}{{^isBoolean}}{{#isNullable}}true{{/isNullable}}{{^isNullable}}false{{/isNullable}}{{/isBoolean}}{{/vendorExtensions.x-emit-default-value}})]
        [JsonPropertyName("{{baseName}}")]
        {{#deprecated}}
        [Obsolete]
        {{/deprecated}}
        public {{{complexType}}}{{^complexType}}{{{datatypeWithEnum}}}{{/complexType}}{{^isContainer}}{{^required}}?{{/required}}{{/isContainer}} {{name}}
        {
            get{ return _{{name}};}
            set
            {
                _{{name}} = value;
                _flag{{name}} = true;
            }
        }
        private {{{complexType}}}{{^complexType}}{{{datatypeWithEnum}}}{{/complexType}}{{^isContainer}}{{^required}}?{{/required}}{{/isContainer}} _{{name}};
        private bool _flag{{name}};

        /// <summary>
        /// Returns false as {{name}} should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerialize{{name}}()
        {
            return _flag{{name}};
        }
        {{/isReadOnly}}
        {{/conditionalSerialization}}
        {{/isEnum}}
        {{/vars}}
        /// <summary>
        /// Initializes a new instance of the <see cref="{{classname}}" /> class.
        /// </summary>
        [JsonConstructor]
        {{^isAdditionalPropertiesTrue}}
        public {{classname}}() { }
        {{/isAdditionalPropertiesTrue}}
        {{#isAdditionalPropertiesTrue}}
        public {{classname}}()
        {
            this.AdditionalProperties = new Dictionary<string, object>();
        }
        {{/isAdditionalPropertiesTrue}}

        /// <summary>
        /// Initializes a new instance of the <see cref="{{classname}}" /> class.
        /// </summary>
        {{#readWriteVars}}
        /// <param name="{{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}">{{description}}{{^description}}{{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}{{/description}}{{#required}} (required){{/required}}{{#defaultValue}} (default to {{.}}){{/defaultValue}}.</param>
        {{/readWriteVars}}
    {{#hasOnlyReadOnly}}
        [JsonConstructor]
    {{/hasOnlyReadOnly}}
        public {{classname}}({{#readWriteVars}}{{{datatypeWithEnum}}}{{#isEnum}}{{^isContainer}}{{^required}}?{{/required}}{{/isContainer}}{{/isEnum}} {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} = {{#defaultValue}}{{^isDateTime}}{{#isString}}{{^isEnum}}@{{/isEnum}}{{/isString}}{{{defaultValue}}}{{/isDateTime}}{{#isDateTime}}default{{/isDateTime}}{{/defaultValue}}{{^defaultValue}}default{{/defaultValue}}{{^-last}}, {{/-last}}{{/readWriteVars}}){{#parent}} : base({{#parentVars}}{{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}{{^-last}}, {{/-last}}{{/parentVars}}){{/parent}}
        {
            {{#vars}}
            {{^isInherited}}
            {{^isReadOnly}}
            {{#required}}
            {{^conditionalSerialization}}
            {{^vendorExtensions.x-csharp-value-type}}
            // to ensure "{{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}" is required (not null)
            if ({{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} == null)
            {
                throw new ArgumentNullException("{{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} is a required property for {{classname}} and cannot be null");
            }
            this.{{name}} = {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}};
            {{/vendorExtensions.x-csharp-value-type}}
            {{#vendorExtensions.x-csharp-value-type}}
            this.{{name}} = {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}};
            {{/vendorExtensions.x-csharp-value-type}}
            {{/conditionalSerialization}}
            {{#conditionalSerialization}}
            {{^vendorExtensions.x-csharp-value-type}}
            // to ensure "{{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}" is required (not null)
            if ({{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} == null)
            {
                throw new ArgumentNullException("{{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} is a required property for {{classname}} and cannot be null");
            }
            this._{{name}} = {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}};
            {{/vendorExtensions.x-csharp-value-type}}
            {{#vendorExtensions.x-csharp-value-type}}
            this._{{name}} = {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}};
            {{/vendorExtensions.x-csharp-value-type}}
            {{/conditionalSerialization}}
            {{/required}}
            {{/isReadOnly}}
            {{/isInherited}}
            {{/vars}}
            {{#vars}}
            {{^isInherited}}
            {{^isReadOnly}}
            {{^required}}
            {{#defaultValue}}
            {{^conditionalSerialization}}
            {{^vendorExtensions.x-csharp-value-type}}
            // use default value if no "{{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}}" provided
            this.{{name}} = {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}} ?? {{{defaultValue}}};
            {{/vendorExtensions.x-csharp-value-type}}
            {{#vendorExtensions.x-csharp-value-type}}
            this.{{name}} = {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}};
            {{/vendorExtensions.x-csharp-value-type}}
            {{/conditionalSerialization}}
            {{/defaultValue}}
            {{^defaultValue}}
            {{^conditionalSerialization}}
            this.{{name}} = {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}};
            {{/conditionalSerialization}}
            {{#conditionalSerialization}}
            this._{{name}} = {{#lambda.camelcase_sanitize_param}}{{name}}{{/lambda.camelcase_sanitize_param}};
            if (this.{{name}} != null)
            {
                this._flag{{name}} = true;
            }`
            {{/conditionalSerialization}}
            {{/defaultValue}}
            {{/required}}
            {{/isReadOnly}}
            {{/isInherited}}
            {{/vars}}
            {{#isAdditionalPropertiesTrue}}
            this.AdditionalProperties = new Dictionary<string, object>();
            {{/isAdditionalPropertiesTrue}}
        }

        {{#vars}}
        {{^isInherited}}
        {{^isEnum}}
        /// <summary>
        /// {{description}}{{^description}}Gets or Sets {{{name}}}{{/description}}
        /// </summary>{{#description}}
        /// <value>{{.}}</value>{{/description}}
        {{^conditionalSerialization}}
        [DataMember(Name = "{{baseName}}"{{#required}}, IsRequired = true{{/required}}, EmitDefaultValue = {{#vendorExtensions.x-emit-default-value}}true{{/vendorExtensions.x-emit-default-value}}{{^vendorExtensions.x-emit-default-value}}{{#isBoolean}}true{{/isBoolean}}{{^isBoolean}}{{#isNullable}}true{{/isNullable}}{{^isNullable}}false{{/isNullable}}{{/isBoolean}}{{/vendorExtensions.x-emit-default-value}})]
        [JsonPropertyName("{{baseName}}")]
        [JsonIgnore(Condition = JsonIgnoreCondition.WhenWritingDefault)]
        {{#isDate}}
        [JsonConverter(typeof(OpenAPIDateConverter))]
        {{/isDate}}
        {{#deprecated}}
        [Obsolete]
        {{/deprecated}}
        public {{{dataType}}}{{^required}}?{{/required}} {{name}} { get; {{#isReadOnly}}private {{/isReadOnly}}set; }

        {{#isReadOnly}}
        /// <summary>
        /// Returns false as {{name}} should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerialize{{name}}()
        {
            return false;
        }
        {{/isReadOnly}}
        {{/conditionalSerialization}}
        {{#conditionalSerialization}}
        {{#isReadOnly}}
        [DataMember(Name = "{{baseName}}"{{#required}}, IsRequired = true{{/required}}, EmitDefaultValue = {{#vendorExtensions.x-emit-default-value}}true{{/vendorExtensions.x-emit-default-value}}{{^vendorExtensions.x-emit-default-value}}{{#isBoolean}}true{{/isBoolean}}{{^isBoolean}}{{#isNullable}}true{{/isNullable}}{{^isNullable}}false{{/isNullable}}{{/isBoolean}}{{/vendorExtensions.x-emit-default-value}})]
        [JsonPropertyName("{{baseName}}")]
        {{#isDate}}
        [JsonConverter(typeof(OpenAPIDateConverter))]
        {{/isDate}}
        {{#deprecated}}
        [Obsolete]
        {{/deprecated}}
        public {{{dataType}}} {{name}} { get; private set; }

        /// <summary>
        /// Returns false as {{name}} should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerialize{{name}}()
        {
            return false;
        }
        {{/isReadOnly}}
        {{^isReadOnly}}
        {{#isDate}}
        [JsonConverter(typeof(OpenAPIDateConverter))]
        {{/isDate}}
        [DataMember(Name = "{{baseName}}"{{#required}}, IsRequired = true{{/required}}, EmitDefaultValue = {{#vendorExtensions.x-emit-default-value}}true{{/vendorExtensions.x-emit-default-value}}{{^vendorExtensions.x-emit-default-value}}{{#isBoolean}}true{{/isBoolean}}{{^isBoolean}}{{#isNullable}}true{{/isNullable}}{{^isNullable}}false{{/isNullable}}{{/isBoolean}}{{/vendorExtensions.x-emit-default-value}})]
        [JsonPropertyName("{{baseName}}")]
        {{#deprecated}}
        [Obsolete]
        {{/deprecated}}
        public {{{dataType}}} {{name}}
        {
            get{ return _{{name}};}
            set
            {
                _{{name}} = value;
                _flag{{name}} = true;
            }
        }
        private {{{dataType}}} _{{name}};
        private bool _flag{{name}};

        /// <summary>
        /// Returns false as {{name}} should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerialize{{name}}()
        {
            return _flag{{name}};
        }
        {{/isReadOnly}}
        {{/conditionalSerialization}}
        {{/isEnum}}
        {{/isInherited}}
        {{/vars}}
        {{#isAdditionalPropertiesTrue}}
        /// <summary>
        /// Gets or Sets additional properties
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalProperties { get; set; }

        {{/isAdditionalPropertiesTrue}}

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public {{#parent}}{{^isArray}}{{^isMap}}override {{/isMap}}{{/isArray}}{{/parent}}{{^parent}}virtual {{/parent}}string ToJson()
        {
            return JsonSerializer.Serialize(this);
        }

        /// <summary>
        /// Builds a {{classname}} from the JSON string presentation of the object
        /// </summary>
        /// <returns>{{classname}}</returns>
        public static {{classname}} FromJson(string jsonString) {
            return JsonSerializer.Deserialize<{{classname}}>(jsonString) ?? throw new InvalidOperationException();
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            {{#useCompareNetObjects}}
            return OpenAPIClientUtils.compareLogic.Compare(this, input as {{classname}}).AreEqual;
            {{/useCompareNetObjects}}
            {{^useCompareNetObjects}}
            return this.Equals(input as {{classname}});
            {{/useCompareNetObjects}}
        }

        /// <summary>
        /// Returns true if {{classname}} instances are equal
        /// </summary>
        /// <param name="input">Instance of {{classname}} to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals({{classname}} input)
        {
            {{#useCompareNetObjects}}
            return OpenAPIClientUtils.compareLogic.Compare(this, input).AreEqual;
            {{/useCompareNetObjects}}
            {{^useCompareNetObjects}}
            if (input == null)
            {
                return false;
            }
            return {{#vars}}{{#parent}}base.Equals(input) && {{/parent}}{{^isContainer}}
                (
                    this.{{name}} == input.{{name}} ||
                    {{^vendorExtensions.x-is-value-type}}
                    (this.{{name}} != null &&
                    this.{{name}}.Equals(input.{{name}}))
                    {{/vendorExtensions.x-is-value-type}}
                    {{#vendorExtensions.x-is-value-type}}
                    this.{{name}}.Equals(input.{{name}})
                    {{/vendorExtensions.x-is-value-type}}
                ){{^-last}} && {{/-last}}{{/isContainer}}{{#isContainer}}
                (
                    this.{{name}} == input.{{name}} ||
                    {{^vendorExtensions.x-is-value-type}}this.{{name}} != null &&
                    input.{{name}} != null &&
                    {{/vendorExtensions.x-is-value-type}}this.{{name}}.SequenceEqual(input.{{name}})
                ){{^-last}} && {{/-last}}{{/isContainer}}{{/vars}}{{^vars}}{{#parent}}base.Equals(input){{/parent}}{{^parent}}false{{/parent}}{{/vars}}{{^isAdditionalPropertiesTrue}};{{/isAdditionalPropertiesTrue}}
                {{#isAdditionalPropertiesTrue}}
                && (this.AdditionalProperties.Count == input.AdditionalProperties.Count && this.AdditionalProperties.All(kv => input.AdditionalProperties.ContainsKey(kv.Key) && Equals(kv.Value, input.AdditionalProperties[kv.Key])));
                {{/isAdditionalPropertiesTrue}}
            {{/useCompareNetObjects}}
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                {{#parent}}
                int hashCode = base.GetHashCode();
                {{/parent}}
                {{^parent}}
                int hashCode = FgaConstants.HashCodeBasePrimeNumber;
                {{/parent}}
                {{#vars}}
                {{^vendorExtensions.x-is-value-type}}
                if (this.{{name}} != null)
                {
                    hashCode = (hashCode * FgaConstants.HashCodeMultiplierPrimeNumber) + this.{{name}}.GetHashCode();
                }
                {{/vendorExtensions.x-is-value-type}}
                {{#vendorExtensions.x-is-value-type}}
                hashCode = (hashCode * FgaConstants.HashCodeMultiplierPrimeNumber) + this.{{name}}.GetHashCode();
                {{/vendorExtensions.x-is-value-type}}
                {{/vars}}
                {{#isAdditionalPropertiesTrue}}
                if (this.AdditionalProperties != null)
                {
                    hashCode = (hashCode * FgaConstants.HashCodeMultiplierPrimeNumber) + this.AdditionalProperties.GetHashCode();
                }
                {{/isAdditionalPropertiesTrue}}
                return hashCode;
            }
        }

{{#validatable}}
{{>validatable}}
{{/validatable}}
    }
