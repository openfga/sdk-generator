```python
import time
import {{{packageName}}}
from {{{packageName}}}.rest import ApiException
from pprint import pprint
{{> python_doc_auth_partial}}
# Enter a context with an instance of the API client
{{#asyncio}}async {{/asyncio}}with {{{packageName}}}.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = {{{packageName}}}.{{{classname}}}(api_client)
{{#requiredParams}}
{{^defaultValue}}
{{^-first}}
    {{paramName}} = {{{example}}} # {{{dataType}}} | {{{description}}}
{{/-first}}
{{/defaultValue}}
{{/requiredParams}}
{{#optionalParams}}
    {{paramName}} = {{{example}}} # {{{dataType}}} | {{{description}}}{{^required}} (optional){{/required}}{{#defaultValue}} if omitted the server will use the default value of {{{.}}}{{/defaultValue}}
{{/optionalParams}}

    try:
    {{#summary}}    # {{{.}}}
    {{/summary}}
        {{#returnType}}api_response = {{/returnType}}{{#asyncio}}await {{/asyncio}}api_instance.api_instance.{{{operationId}}}({{#allParams}}{{#required}}{{^-first}}{{paramName}}{{^-last}}, {{/-last}}{{/-first}}{{/required}}{{^required}}{{paramName}}={{paramName}}{{^-last}}, {{/-last}}{{/required}}{{/allParams}}){{#returnType}}
        pprint(api_response){{/returnType}}
    except ApiException as e:
        print("Exception when calling {{classname}}->{{operationId}}: %s\n" % e)
    {{#asyncio}}await {{/asyncio}}api_client.close()
```
