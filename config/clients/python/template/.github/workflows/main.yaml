name: Build, Test and Publish

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  fossa:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
          cache: 'pip'
          cache-dependency-path: |
            **/setup.cfg
            **/requirements*.txt
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            python -m pip install -r requirements.txt
            pip install setuptools wheel twine 
      - name: Build
        run: python setup.py sdist bdist_wheel
      - name: Run FOSSA scan and upload build data
        uses: fossas/fossa-action@main
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}
          branch: ${{ github.ref_name }}
      - name: Run FOSSA tests
        uses: fossas/fossa-action@main
        with:
          api-key: ${{ secrets.FOSSA_API_KEY }}
          run-tests: true

  snyk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
          cache: 'pip'
          cache-dependency-path: |
            **/setup.cfg
            **/requirements*.txt
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            python -m pip install -r requirements.txt
            pip install setuptools wheel twine 
      - name: Build
        run: python setup.py sdist bdist_wheel
      - name: Run Snyk to check for vulnerabilities
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          npm install -g snyk
          snyk auth $SNYK_TOKEN
          snyk monitor

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: |
            **/setup.cfg
            **/requirements*.txt
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            python -m pip install -r test-requirements.txt
      - name: Test
        run: python -m unittest test/*
      - name: Flake8 on SDK
        run: python -m flake8 --ignore F401,E402,E501,W504 openfga_sdk
      - name: Flake8 on unit test
        run: python -m flake8 --ignore E501 test

  create-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [test, fossa, snyk]

    steps:
      - uses: actions/checkout@v3

      - uses: Roang-zero1/github-create-release-action@5cf058ddffa6fa04e5cda07c98570c757dc4a0e1
        with:
          version_regex: ^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
