#### List Stores

[API Documentation]({{apiDocsUrl}}#/Stores/ListStores)

```javascript
const { stores } = await {{appCamelCaseName}}.listStores();

// stores = [{ "id": "01FQH7V8BEG3GPQW93KTRFR8JB", "name": "FGA Demo Store", "created_at": "2022-01-01T00:00:00.000Z", "updated_at": "2022-01-01T00:00:00.000Z" }]
```

#### Create Store

[API Documentation]({{apiDocsUrl}}#/Stores/CreateStore)

```javascript
const { id: storeId } = await {{appCamelCaseName}}.createStore({
  name: "FGA Demo Store",
});

// storeId = "01FQH7V8BEG3GPQW93KTRFR8JB"
```

#### Get Store

[API Documentation]({{apiDocsUrl}}#/Stores/GetStore)

> Requires a client initialized with a storeId

```javascript
const store = await {{appCamelCaseName}}.getStore({
  name: "FGA Demo Store",
});

// store = { "id": "01FQH7V8BEG3GPQW93KTRFR8JB", "name": "FGA Demo Store", "created_at": "2022-01-01T00:00:00.000Z", "updated_at": "2022-01-01T00:00:00.000Z" }
```

#### Delete Store

[API Documentation]({{apiDocsUrl}}#/Stores/DeleteStore)

> Requires a client initialized with a storeId

```javascript
await {{appCamelCaseName}}.deleteStore();
```

#### Write Authorization Model

[API Documentation]({{apiDocsUrl}}#/Authorization%20Models/WriteAuthorizationModel)

> Requires a client initialized with a storeId

> Note: To learn how to build your authorization model, check the Docs at {{docsUrl}}.

> Learn more about [the {{appName}} configuration language]({{docsUrl}}/configuration-language).

```javascript
const { authorization_model_id: id } = await {{appCamelCaseName}}.writeAuthorizationModel({
  type_definitions: [{
    type: "document",
    relations: {
      "writer": { "this": {} },
      "viewer": {
        "union": {
          "child": [
            { "this": {} },
            { "computedUserset": {
               "object": "",
              "relation": "viewer" }
            }
          ]
        }
      }
    } }],
});

// id = "1uHxCSuTP0VKPYSnkq1pbb1jeZw"
```

#### Read a Single Authorization Model

[API Documentation]({{apiDocsUrl}}#/Authorization%20Models/ReadAuthorizationModel)

> Requires a client initialized with a storeId

```javascript
// Assuming `1uHxCSuTP0VKPYSnkq1pbb1jeZw` is an id of a single model
const { authorization_model: authorizationModel } = await {{appCamelCaseName}}.readAuthorizationModel('1uHxCSuTP0VKPYSnkq1pbb1jeZw');

// authorizationModel = { id: "1uHxCSuTP0VKPYSnkq1pbb1jeZw", type_definitions: [...] }
```

#### Read Authorization Model IDs

[API Documentation]({{apiDocsUrl}}#/Authorization%20Models/ReadAuthorizationModels)

```javascript
const { authorization_model_ids: authorizationModelIds } = await {{appCamelCaseName}}.readAuthorizationModels();

// authorizationModelIds = ["1uHxCSuTP0VKPYSnkq1pbb1jeZw", "GtQpMohWezFmIbyXxVEocOCxxgq"];
```

#### Check

[API Documentation]({{apiDocsUrl}}#/Relationship%20Queries/Check)

> Requires a client initialized with a storeId

> Provide a tuple and ask the {{appName}} API to check for a relationship

```javascript
const result = await {{appCamelCaseName}}.check({
  tuple_key: {
    user: "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
    relation: "admin",
    object: "workspace:675bcac4-ad38-4fb1-a19a-94a5648c91d6",
  },
});

// result = { allowed: true, resolution: "" }
```

#### Write Tuples

[API Documentation]({{apiDocsUrl}}#/Relationship%20Tuples/Write)

> Requires a client initialized with a storeId

```javascript
await {{appCamelCaseName}}.write({
  writes: {
    tuple_keys: [{ user: "user:81684243-9356-4421-8fbf-a4f8d36aa31b", relation: "viewer", object: "document:roadmap" }],
  },
});

```

#### Delete Tuples

[API Documentation]({{apiDocsUrl}}#/Relationship%20Tuples/Write)

> Requires a client initialized with a storeId

```javascript
await {{appCamelCaseName}}.write({
  deletes: {
    tuple_keys: [{ user: "user:81684243-9356-4421-8fbf-a4f8d36aa31b", relation: "viewer", object: "document:roadmap" }],
  },
});

```

#### Expand

[API Documentation]({{apiDocsUrl}}#/Relationship%20Queries/Expand)

> Requires a client initialized with a storeId

```javascript
const { tree } = await {{appCamelCaseName}}.expand({
  tuple_key: {
    relation: "admin",
    object: "workspace:675bcac4-ad38-4fb1-a19a-94a5648c91d6",
  },
});

// tree  = { root: { name: "workspace:675bcac4-ad38-4fb1-a19a-94a5648c91d6#admin", leaf: { users: { users: ["user:81684243-9356-4421-8fbf-a4f8d36aa31b", "user:f52a4f7a-054d-47ff-bb6e-3ac81269988f"] } } } }
```

#### Read Tuples

[API Documentation]({{apiDocsUrl}}#/Relationship%20Tuples/Read)

> Requires a client initialized with a storeId

```javascript
// Find if a relationship tuple stating that a certain user is an admin on a certain workspace
const body = {
  tuple_key: {
    user: "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
    relation: "admin",
    object: "workspace:675bcac4-ad38-4fb1-a19a-94a5648c91d6",
  },
};

// Find all relationship tuples where a certain user has a relationship as any relation to a certain workspace
const body = {
  tuple_key: {
    user: "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
    object: "workspace:675bcac4-ad38-4fb1-a19a-94a5648c91d6",
  },
};

// Find all relationship tuples where a certain user is an admin on any workspace
const body = {
  tuple_key: {
    user: "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
    relation: "admin",
    object: "workspace:",
  },
};

// Find all relationship tuples where any user has a relationship as any relation with a particular workspace
const body = {
  tuple_key: {
    object: "workspace:675bcac4-ad38-4fb1-a19a-94a5648c91d6",
  },
};

const { tuples } = await {{appCamelCaseName}}.read(body);

// In all the above situations, the response will be of the form:
// tuples = [{ key: { user, relation, object }, timestamp: ... }]
```

#### Read Changes (Watch)

> Requires a client initialized with a storeId

[API Documentation]({{apiDocsUrl}}#/Relationship%20Tuples/ReadChanges)

```javascript
const type = 'workspace';
const pageSize = 25;
const continuationToken = 'eyJwayI6IkxBVEVTVF9OU0NPTkZJR19hdXRoMHN0b3JlIiwic2siOiIxem1qbXF3MWZLZExTcUoyN01MdTdqTjh0cWgifQ==';
const response = await {{appCamelCaseName}}.readChanges(type, pageSize, continuationToken);

// response.continuation_token = ...
// response.changes = [
//   { tuple_key: { user, relation, object }, operation: "write", timestamp: ... },
//   { tuple_key: { user, relation, object }, operation: "delete", timestamp: ... }
// ]
```

#### List Objects

> Requires a client initialized with a storeId

[API Documentation]({{apiDocsUrl}}#/Relationship%20Queries/ListObjects)

```javascript
const response = await openFgaApi.listObjects({
  authorization_model_id: "01GAHCE4YVKPQEKZQHT2R89MQV",
  user: "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
  relation: "can_read",
  type: "document",
  contextual_tuples: {
    tuple_keys:
      [{
        user: "user:81684243-9356-4421-8fbf-a4f8d36aa31b",
        relation: "editor",
        object: "folder:product"
      }, {
        user: "folder:product",
        relation: "parent",
        object: "document:roadmap"
      }]
  }
});

// response.object_ids = ["roadmap"]
```
